# Builder stage for compiling and installing dependencies
FROM public.ecr.aws/docker/library/python:3.10-slim as builder

# Set labels
LABEL maintainer="Amazon Braket" \
    major_version="1"

# Set environment variables to minimize interactions and cleanup
ENV DEBIAN_FRONTEND=noninteractive \
    DEBCONF_NONINTERACTIVE_SEEN=true \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHON=python3.10

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    openssh-client \
    openssh-server \
    ca-certificates \
    curl \
    unzip \
    wget \
    libssl-dev \
    libffi-dev \
    zlib1g-dev \
    # Install dependent library for OpenCV
    libgtk2.0-dev \
    tk-dev \
    # Python install tools
    gcc \
    musl-dev \
    && rm -rf /var/lib/apt/lists/*


# Download and install OpenMPI
RUN mkdir /tmp/openmpi && cd /tmp/openmpi \
    && wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.6.tar.gz \
    && tar zxf openmpi-4.1.6.tar.gz && cd openmpi-4.1.6 \
    && ./configure --enable-orterun-prefix-by-default \
    && make -j $(nproc) all \
    && make install \
    && ldconfig \
    && rm -rf /tmp/openmpi

# Prepare virtual environment to isolate builds
RUN apt-get update && apt-get install -y --no-install-recommends python3-venv \
    && ${PYTHON} -m venv /opt/venv

# Activate virtual environment for subsequent commands
ENV PATH="/opt/venv/bin:$PATH"

# Install Python packages in virtual environment
# Copy only the requirements file first to leverage Docker cache
COPY requirements.txt .
RUN pip install -r requirements.txt

# Check compliance
RUN HOME_DIR=/root \
 && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
 && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
 && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
 && chmod +x /usr/local/bin/testOSSCompliance \
 && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
 && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
 && rm -rf ${HOME_DIR}/oss_compliance*

## Cleanup ##
RUN pip cache purge \
 && rm -rf /tmp/tmp* \
 && rm -iRf /root/.cache

# Runtime stage
FROM public.ecr.aws/docker/library/python:3.10-slim

# Copy installed Python and OpenMPI from the builder stage
COPY --from=builder /usr/local /usr/local

# Set environment variables
ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    PYTHON=python3.10 \
    PATH=/usr/local/bin:$PATH

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libssl-dev \
    ca-certificates \
    curl \
    git \
    unzip \
    wget \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && apt-get clean

# Prepare environment for OpenMPI and Python application
COPY --from=builder /usr/local/bin/mpirun /usr/local/bin/mpirun
COPY --from=builder /usr/local/etc/openmpi-mca-params.conf /usr/local/etc/openmpi-mca-params.conf

# Set working directory and copy necessary files for the application
WORKDIR /app
COPY braket_container.py /opt/ml/code/braket_container.py

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Check compliance
RUN HOME_DIR=/root \
 && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
 && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
 && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
 && chmod +x /usr/local/bin/testOSSCompliance \
 && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
 && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
 && rm -rf ${HOME_DIR}/oss_compliance*

# Set default command or entry point
ENV SAGEMAKER_PROGRAM braket_container.py

ENV PATH="/opt/venv/bin:$PATH"

CMD ["python3", "/opt/ml/code/braket_container.py"]
